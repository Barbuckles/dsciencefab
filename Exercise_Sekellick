# Exercise Complete

{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "14ff22fb",
   "metadata": {},
   "source": [
    "# Data Science for Absolute Beginners\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "bda4e700",
   "metadata": {},
   "source": [
    "## Practice Notebook"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0c5979c0",
   "metadata": {},
   "source": [
    "### 0. Import Libraries"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "e72919c2",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import seaborn as sns\n",
    "import matplotlib.pyplot as plt"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2612d6ed",
   "metadata": {},
   "source": [
    "### 1. Import Flights Dataset"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "6d4a6dc9",
   "metadata": {},
   "outputs": [],
   "source": [
    "df = pd.read_csv(\"data/flight_data.csv\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0e11eebd",
   "metadata": {},
   "source": [
    "## Dataset Details\n",
    "\n",
    "- year - Year of Flight\n",
    "- month - Month of Flight\n",
    "- day - Day (number of Flight)\n",
    "- dep_time - Departure Time\n",
    "- sched_dep_time - Scheduled Departure Time\n",
    "- dep_delay - Departure Delay (in Minutes)\n",
    "- arr_time - Arrival Time\n",
    "- sched_arr_time - Scheduled Arrival Time\n",
    "- arr_delay - Arrival Delay (in Minutes)\n",
    "- carrier- Carrier Details of Flight\n",
    "- flight - Flight Name\n",
    "- tailnum - Tailnumber of Flight\n",
    "- origin - Origin of Flight\n",
    "- dest - Destination Airport Name\n",
    "- air_time - Air Time (Time in Air - travel Time ( in minutes) )\n",
    "- distance - Distance (assuming in miles?)\n",
    "- hour - Hour\n",
    "- minute - minute\n",
    "- time_hour - time hour"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "56473a18",
   "metadata": {},
   "outputs": [],
   "source": [
    "# verify first few records"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "dacfe408",
   "metadata": {},
   "outputs": [],
   "source": [
    "# verify dataframe information"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "594187fe",
   "metadata": {
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "# check unique values for carrier\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "67aef5e2",
   "metadata": {},
   "outputs": [],
   "source": [
    "# drop carrier column"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "99b596e4",
   "metadata": {},
   "outputs": [],
   "source": [
    "# get value counts for carrier column"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f1bc8497",
   "metadata": {},
   "source": [
    "## Exercises "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "b6adc786",
   "metadata": {},
   "outputs": [],
   "source": [
    "# filter for american airlines\n",
    " "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "7c06565d",
   "metadata": {},
   "outputs": [],
   "source": [
    "# filter for month of january"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d4ec8064",
   "metadata": {},
   "source": [
    "## Group Exercises"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "46fdc298",
   "metadata": {},
   "source": [
    "### Exercise 1\n",
    "\n",
    "Find all flights that had an arrival delay of two or more hours."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "44c0cc46",
   "metadata": {},
   "outputs": [],
   "source": [
    " "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "bba1d152",
   "metadata": {},
   "source": [
    " ### Exercise 2\n",
    " \n",
    " Find all flights that flew to Houston (IAH or HOU)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "c62299b9",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "id": "ea2bcab3",
   "metadata": {},
   "source": [
    "### Exercise 3\n",
    "\n",
    "Find all flights that were operated by United, American, or Delta"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "ecca18b1",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "id": "c1a79cf8",
   "metadata": {},
   "source": [
    "### Exercise 4\n",
    "\n",
    "Find all flights departed in summer (July, August, and September)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "a44a049e",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "id": "e56bcd45",
   "metadata": {},
   "source": [
    "### Exercise 5\n",
    "Find all flights that arrived more than two hours late, but didn't leave late."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "3907225e",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "id": "a15d0406",
   "metadata": {},
   "source": [
    "### Exercises 6\n",
    "\n",
    "Find all flights that were delayed by at least an hour, but made up over 30 minutes in flight."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "a81312cf",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
